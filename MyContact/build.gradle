// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'com.google.gms:google-services:4.3.2'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
task convertDimens() {
    def xmlFile600 = "${project.rootDir}/app/src/main/res/values-sw600dp/dimens.xml"
    def xmlFile300 = "${project.rootDir}/app/src/main/res/values-sw300dp/dimens.xml"
    def xmlFile320 = "${project.rootDir}/app/src/main/res/values-sw320dp/dimens.xml"
    def xmlFile360 = "${project.rootDir}/app/src/main/res/values-sw360dp/dimens.xml"
    def xmlFile411 = "${project.rootDir}/app/src/main/res/values-sw411dp/dimens.xml"
    def xmlFile420 = "${project.rootDir}/app/src/main/res/values-sw420dp/dimens.xml"
    def xmlFile480 = "${project.rootDir}/app/src/main/res/values-sw480dp/dimens.xml"
    def xmlFile484 = "${project.rootDir}/app/src/main/res/values-sw484dp/dimens.xml"
    def xmlFile540 = "${project.rootDir}/app/src/main/res/values-sw540dp/dimens.xml"
    def xmlFile640 = "${project.rootDir}/app/src/main/res/values-sw640dp/dimens.xml"
    def xmlFile720 = "${project.rootDir}/app/src/main/res/values-sw720dp/dimens.xml"
    def xmlFile800 = "${project.rootDir}/app/src/main/res/values-sw800dp/dimens.xml"
    def xmlFile1024 = "${project.rootDir}/app/src/main/res/values-sw1024dp/dimens.xml"
    def xmlFile1080 = "${project.rootDir}/app/src/main/res/values-sw1080dp/dimens.xml"
    def xmlOriginal = new XmlParser().parse(xmlFile411)

    def xml300 = xmlOriginal.clone()
    def xml320 = xmlOriginal.clone()
    def xml360 = xmlOriginal.clone()
    def xml420 = xmlOriginal.clone()
    def xml480 = xmlOriginal.clone()
    def xml484 = xmlOriginal.clone()
    def xml540 = xmlOriginal.clone()
    def xml600 = xmlOriginal.clone()
    def xml640 = xmlOriginal.clone()
    def xml720 = xmlOriginal.clone()
    def xml800 = xmlOriginal.clone()
    def xml1024 = xmlOriginal.clone()
    def xml1080 = xmlOriginal.clone()


    xml300.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((300 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((300 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((300 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }

    xml320.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((320 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((320 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((320 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml360.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((360 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((360 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((360 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml600.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((600 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((600 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((600 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }



    xml420.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((420 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((420 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((420 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml480.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((480 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((480 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((480 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml484.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((484 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((484 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((484 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }

    xml540.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((540 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((540 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((540 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml640.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((640 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((640 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((640 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }



    xml720.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((720 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((720 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((720 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml800.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((800 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((800 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((800 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml1024.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((1024 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((1024 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((1024 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    xml1080.dimen.each { dimen ->
        def value = dimen.text();
        if (value.contains("sp")) {
            def newValue = value.replace("sp", "").toFloat()
            newValue = round((1080 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "sp"
        } else if (value.contains("px")) {
            def newValue = value.replace("px", "").toFloat()
            newValue = round((1080 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "px"
        } else {
            def newValue = value.replace("dp", "").toFloat()
            newValue = round((1080 / 411 * newValue).toFloat(), 2);
            dimen.value = newValue + "dp"
        }
    }


    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile300))).print(xml300)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile320))).print(xml320)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile360))).print(xml360)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile420))).print(xml420)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile480))).print(xml480)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile484))).print(xml484)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile540))).print(xml540)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile600))).print(xml600)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile640))).print(xml640)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile720))).print(xml720)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile800))).print(xml800)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile1024))).print(xml1024)
    new XmlNodePrinter(new PrintWriter(new FileWriter(xmlFile1080))).print(xml1080)

}

public static float round(float d, int decimalPlace) {
    BigDecimal bd = new BigDecimal(Float.toString(d));
    bd = bd.setScale(decimalPlace, BigDecimal.ROUND_HALF_UP);
    return bd.floatValue();
}

clean.dependsOn convertDimens
